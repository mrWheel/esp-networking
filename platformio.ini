[platformio]
default_envs = esp8266_usb, esp8266_ota, esp32_usb, esp32_ota
workspace_dir = .pio.nosync

[env]
framework = arduino
monitor_speed = 115200
;build_src_filter = +<*> +<../examples/basicExample.cpp>
build_src_filter = +<*> +<../examples/ntpExample.cpp>
lib_deps =
    WiFiManager

;-------------------------------------------------------------------------------
[esp8266_common]
platform = espressif8266
lib_deps = 
    ${env.lib_deps}
    ESP8266mDNS
build_flags = 
    -DESP8266

;-------------------------------------------------------------------------------
[esp32_common]
platform = espressif32
lib_deps = 
    ${env.lib_deps}
build_flags = 
    -DESP32

;-------------------------------------------------------------------------------
[env:esp8266_usb]
extends = esp8266_common
board = d1
;upload_speed = 921600
;upload_port = COM3  ; adjust this to your USB port

;-------------------------------------------------------------------------------
[env:esp8266_ota]
extends = esp8266_common
board = d1
upload_protocol = espota
upload_port = esp8266.local    ; uses mDNS name
;upload_port = 192.168.1.100  ; or use direct IP address

;-------------------------------------------------------------------------------
[env:esp32_usb]
extends = esp32_common
board = esp32dev
;board = esp32-s3-devkitc-1
;upload_speed = 921600
;upload_port = COM3  ; adjust this to your USB port
monitor_filters = 
	esp32_exception_decoder

;-------------------------------------------------------------------------------
[env:esp32_ota]
extends = esp32_common
board = esp32dev
upload_protocol = espota
upload_port = esp32.local    ; uses mDNS name
;upload_port = 192.168.1.100  ; or use direct IP address

; Optional: OTA password (uncomment and set if desired)
;upload_flags = 
;    --auth=your_password

; Optional: Enable filesystem upload (uncomment to use)
;board_build.filesystem = littlefs
;extra_scripts = upload_fs.py

monitor_filters = 
	esp32_exception_decoder
